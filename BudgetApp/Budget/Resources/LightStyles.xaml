<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="FontFamily" Value="Comic Sans MS"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BordersColor}" BorderThickness="1.5" CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{DynamicResource BordersColor}" BorderThickness="1" CornerRadius="2">
                        <Grid>
                            <Rectangle x:Name="backgroundRectangle">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="{DynamicResource Gradient2}" Offset="0.0" />
                                        <GradientStop Color="{DynamicResource Gradient1}" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="overlayRectangle" Fill="Transparent"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlayRectangle" Property="Fill" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="overlayRectangle" Property="Fill" Value="{DynamicResource OnPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                            <Setter TargetName="overlayRectangle" Property="Fill" Value="{DynamicResource Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource MainBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BordersColor}" />
        <Setter Property="RowBackground" Value="{DynamicResource Background}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource OnSelected}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="True"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                    <Setter Property="Background" Value="{DynamicResource Background}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource BordersColor}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Grid>
                                    <Border x:Name="border" Background="{DynamicResource Background}" BorderBrush="{DynamicResource BordersColor}" BorderThickness="0,1,1,1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Width="4" Cursor="SizeWE"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- To remake this style fully: https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/datepicker-styles-and-templates?view=netframeworkdesktop-4.8-->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BordersColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="DatePickerTextBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BordersColor}"/>
    </Style>
    <Style x:Key="DropDownButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BordersColor}"/>
    </Style>


</ResourceDictionary>